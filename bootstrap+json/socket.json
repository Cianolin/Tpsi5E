{
    "title": "Bootstrap demo",
    "navbar": [
        { "text": "HOME", "link": "index.html" },
        { "text": "Informatica", "link": "informatica.html" },
        { "text": "Sistemi", "link": "sistemi.html" },
        { "text": "Socket", "link": "socket.html" },
        { "text": "Glossario", "link": "glossario.html" }
    ],
    "header": "Socket",
    "sections": [
        { "id": "item-1",
            "title": "Cos'e una socket",
            "content": "Una socket è un mezzo di comunicazione che permette a due dispositivi di scambiarsi informazioni su una\nrete, come una connessione telefonica tra due interlocutori. Immagina la socket come un canale attraverso il\n  quale i dati possono fluire avanti e indietro. Un dispositivo invia dati attraverso questo canale, e l'altro\nli riceve.\nLa comunicazione tramite socket avviene stabilendo una connessione tra un indirizzo IP e una porta specifica\n            su ciascun dispositivo. L'indirizzo IP identifica il dispositivo nella rete, mentre la porta indirizza la\n            comunicazione a una specifica applicazione all'interno del dispositivo. Questo processo consente di\n            stabilire un \"tunnel\" sicuro e diretto per lo scambio di dati, garantendo che i messaggi inviati da una\n            parte arrivino correttamente all'altra parte." },
        { "id": "item-2",
            "title": "Tipologie di socket",
            "content": "Le socket sono di 3 tipi e ciascuno diversa tra loro nella modalità di connessione." },
        { "id": "item-2-1",
            "title": "Stream socket",
            "content": "I stream socket (detti anche socket TCP) sono utilizzati per le connessioni affidabili, orientate alla\nconnessione e basate sul protocollo TCP (Transmission Control Protocol). Offrono un canale di comunicazione\n   bidirezionale continuo tra due processi, garantendo che i dati vengano consegnati in ordine e senza\nduplicati. Sono ideali per applicazioni come il web browsing, l'email e il trasferimento di file, dove\nl'integrità dei dati e l'ordine sono cruciali." },
        { "id": "item-2-2",
            "title": "Datagram socket",
            "content": "I datagram socket (detti anche socket UDP) utilizzano il protocollo UDP (User Datagram Protocol) per la\n comunicazione. A differenza dei stream socket, i datagram socket non richiedono una connessione stabilita e\n  non garantiscono l'ordine o la consegna dei dati. Sono adatti per applicazioni che richiedono una\n trasmissione rapida e non critica dell'integrità dei dati, come lo streaming audio/video, il gaming online e\nle comunicazioni VoIP." },
        { "id": "item-2-3",
            "title": "Raw socket",
            "content": "I raw socket forniscono un accesso diretto ai protocolli sottostanti come IP o ICMP, consentendo agli\n   sviluppatori di manipolare i pacchetti di rete a un livello più basso rispetto ai socket TCP o UDP. Sono\n   utilizzati per attività avanzate come il monitoraggio del traffico di rete, il pinging, e l'implementazione\n  di protocolli personalizzati. A causa del loro accesso a livello basso, richiedono privilegi amministrativi\n            per essere utilizzati." },
        { "id": "item-3",
            "title": "Processo di comunicazione",
            "content": "<ol>\n              <li>Creazione della Socket: Entrambi i lati della comunicazione, cioè il client e il server, iniziano\n                creando una socket, che è come un punto di accesso per inviare e ricevere dati attraverso la rete.</li>\n              <li>Binding (Solo per il Server): Il server associa questa socket a un indirizzo IP e una porta specifici.\n                È come dare un indirizzo alla socket, in modo che il client sappia dove connettersi.</li>\n              <li>Ascolto (Solo per il Server): Il server mette la socket in modalità di ascolto, aspettando che i\n                client si connettano. È come aprire la porta e aspettare che qualcuno arrivi.</li>\n              <li>Connessione (Client): Il client cerca di connettersi al server utilizzando l'indirizzo IP e la porta\n                specificati. Questo è come chiamare un numero di telefono.</li>\n              <li>Accettazione della Connessione (Server): Quando il server riceve una richiesta di connessione dal\n                client, accetta la connessione. È come rispondere alla chiamata.</li>\n              <li>Comunicazione: Una volta stabilita la connessione, sia il client che il server possono scambiare dati.\n                Possono inviare e ricevere messaggi l'uno dall'altro, come due persone che parlano al telefono.</li>\n              <li>Chiusura della Connessione: Dopo che hanno finito di comunicare, entrambi chiudono le loro socket. È\n                come riagganciare il telefono alla fine di una chiamata.</li>\n            </ol>",
            "image": "Img3.jpg" }
    ],
    "footer": "Luciano Lin 5E"
}
